<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module>
<module version="2.0">
	<meta>
		<identity>
			<uri>urn:com:proxml:milieuinfo:server</uri>
			<version>1.0.0</version>
		</identity>
		<info>
			<name>proxml / milieuinfo / server</name>
			<description>proxml / milieuinfo / server</description>
		</info>
	</meta>
		
	<system>
		<dynamic/>
	</system>
	
	<rootspace
		name="proxml milieuinfo server"
		public="true"
		uri="urn:com:proxml:milieuinfo:server">

		<fileset>
			<regex>res:/etc/system/(LogConfig|SimpleDynamicImportHook).xml</regex>
		</fileset>

		<!-- this endpoint makes sure no other /etc/system resource
		     gets pulled in -->
		<endpoint>
			<prototype>Limiter</prototype>
			<grammar>res:/etc/system<regex type="anything"/></grammar>
		</endpoint>
		
		<overlay>
			<prototype>RESTOverlay</prototype>
			<config>
				<basepath>/imjv/</basepath>
				<auto404/>
			</config>
			
			<space>
				<mapper>
					<config>
						<!-- /imjv/(dossier|exploitatie)/xxxxxxx/<remainder>.(rdf|ttl|nt|jsonld|html) -->
						<endpoint>
							<meta>
								<rest>
									<simple>{owner:(dossier|exploitatie)}/{id}/{remainder}.{extension:(rdf|ttl|nt|jsonld|html)}</simple>
									<method>GET</method>
									<Etag>MD5</Etag>
									<compress/>
								</rest>
							</meta>
							
							<grammar>
								<active>
									<identifier>active:milieuinfoimjvbyidremainderwithextensionrestoverlay</identifier>
									<argument name="owner"/>
									<argument name="id"/>
									<argument name="remainder"/>
									<argument name="extension"/>
								</active>
							</grammar>
							
							<request>
								<identifier>active:milieuinfoimjvbyidremainderwithextension</identifier>
								<argument name="owner" method="as-string">imjv/[[arg:owner]]</argument>
								<argument name="id" method="as-string">[[arg:id]]</argument>
								<argument name="remainder" method="as-string">[[arg:remainder]]</argument>
								<argument name="extension" method="as-string">[[arg:extension]]</argument>
							</request>							
						</endpoint>

						<!-- /imjv/(dossier|exploitatie)/xxxxxxx/<remainder> -->
						<endpoint>
							<meta>
								<rest>
									<simple>{owner:(dossier|exploitatie)}/{id}/{remainder}</simple>
									<method>GET</method>
									<Etag>MD5</Etag>
									<compress/>
									<produces>text/xml</produces>
									<produces withTransform="active:rdfxml2rdfxml">application/rdf+xml</produces>
									<produces withTransform="active:rdfxml2turtle">text/turtle</produces>
									<produces withTransform="active:rdfxml2ntriple">text/plain</produces>
									<produces withTransform="active:rdfxml2jsonld">application/ld+json</produces>
									<produces withTransform="active:rdfxml2html+operator@res:/resources/xsl/rdfxml2htmlimjv.xsl">text/html</produces>
								</rest>
							</meta>
							<grammar>
								<active>
									<identifier>active:milieuinfoimjvbyidremainderrestoverlay</identifier>
									<argument name="owner"/>
									<argument name="id"/>
									<argument name="remainder"/>
								</active>
							</grammar>
							<request>
								<identifier>active:milieuinfoimjvbyidremainder</identifier>
								<argument name="owner" method="as-string">imjv/[[arg:owner]]</argument>
								<argument name="id" method="as-string">[[arg:id]]</argument>
								<argument name="remainder" method="as-string">[[arg:remainder]]</argument>
							</request>
						</endpoint>
>
						
						<!-- /imjv/(dossier|exploitatie)/xxxxxxx.(rdf|ttl|nt|jsonld|html) -->
						<endpoint>
							<meta>
								<rest>
									<simple>{owner:(dossier|exploitatie)}/{id}.{extension:(rdf|ttl|nt|jsonld|html)}</simple>
									<method>GET</method>
									<Etag>MD5</Etag>
									<compress/>
								</rest>
							</meta>
							<grammar>
								<active>
									<identifier>active:milieuinfoimjvbyidwithextensionrestoverlay</identifier>
									<argument name="owner"/>
									<argument name="id"/>
									<argument name="extension"/>
								</active>
							</grammar>
							<request>
								<identifier>active:milieuinfoimjvbyidwithextension</identifier>
								<argument name="owner" method="as-string">imjv/[[arg:owner]]</argument>
								<argument name="id" method="as-string">[[arg:id]]</argument>
								<argument name="extension" method="as-string">[[arg:extension]]</argument>
							</request>
						</endpoint>

						<!-- /imjv/(dossier|exploitatie)/xxxxxxx -->
						<endpoint>
							<meta>
								<rest>
									<simple>{owner:(dossier|exploitatie)}/{id}</simple>
									<method>GET</method>
									<Etag>MD5</Etag>
									<compress/>
									<produces>text/xml</produces>
									<produces withTransform="active:rdfxml2rdfxml">application/rdf+xml</produces>
									<produces withTransform="active:rdfxml2turtle">text/turtle</produces>
									<produces withTransform="active:rdfxml2ntriple">text/plain</produces>
									<produces withTransform="active:rdfxml2jsonld">application/ld+json</produces>
									<produces withTransform="active:rdfxml2html+operator@res:/resources/xsl/rdfxml2htmlimjv.xsl">text/html</produces>
								</rest>
							</meta>
							<grammar>
								<active>
									<identifier>active:milieuinfoimjvbyidrestoverlay</identifier>
									<argument name="owner"/>
									<argument name="id"/>
								</active>
							</grammar>
							<request>
								<identifier>active:milieuinfoimjvbyid</identifier>
								<argument name="owner" method="as-string">imjv/[[arg:owner]]</argument>
								<argument name="id" method="as-string">[[arg:id]]</argument>
							</request>
						</endpoint>
					</config>
					
					<space>
						<import>
							<!-- database constants -->
							<uri>urn:com:proxml:milieuinfo:database</uri>
							<private/>
						</import>			

						<import>
							<!-- tools needed inside the RESTOverlay -->
							<uri>urn:com:proxml:milieuinfo:server:import:overlay</uri>
							<private/>
						</import>
					</space>
				</mapper>
				
				<import>
					<!-- database constants -->
					<uri>urn:com:proxml:milieuinfo:database</uri>
					<private/>
				</import>			

				<import>
					<!-- needed here as well if the RESTOverlay itself
						 launches the request -->
					<uri>urn:com:proxml:milieuinfo:server:import:overlay</uri>
					<private/>
				</import>
			</space>
		</overlay>

		<overlay>
			<prototype>RESTOverlay</prototype>
			<config>
				<basepath>/cbb/</basepath>
				<auto404/>
			</config>
			
			<space>
				<mapper>
					<config>
						<!-- /cbb/(adres|exploitatie|exploitant)/xxxxx/<remainder>.(rdf|ttl|nt|jsonld|html) -->
						<endpoint>
							<meta>
								<rest>
									<simple>{owner:(exploitatie)}/{id}/{remainder}.{extension:(rdf|ttl|nt|jsonld|html)}</simple>
									<method>GET</method>
									<Etag>MD5</Etag>
									<compress/>
								</rest>
							</meta>
							
							<grammar>
								<active>
									<identifier>active:milieuinfocbbbyidremainderwithextensionrestoverlay</identifier>
									<argument name="owner"/>
									<argument name="id"/>
									<argument name="remainder"/>
									<argument name="extension"/>
								</active>
							</grammar>
							
							<request>
								<identifier>active:milieuinfocbbbyidremainderwithextension</identifier>
								<argument name="owner" method="as-string">cbb/[[arg:owner]]</argument>
								<argument name="id" method="as-string">[[arg:id]]</argument>
								<argument name="remainder" method="as-string">[[arg:remainder]]</argument>
								<argument name="extension" method="as-string">[[arg:extension]]</argument>
							</request>							
						</endpoint>
						
						<!-- /cbb/(adres|exploitatie|exploitant)/xxxxx/<remainder> -->
						<endpoint>
							<meta>
								<rest>
									<simple>{owner:(exploitatie)}/{id}/{remainder}</simple>
									<method>GET</method>
									<Etag>MD5</Etag>
									<compress/>
									<produces>text/xml</produces>
									<produces withTransform="active:rdfxml2rdfxml">application/rdf+xml</produces>
									<produces withTransform="active:rdfxml2turtle">text/turtle</produces>
									<produces withTransform="active:rdfxml2ntriple">text/plain</produces>
									<produces withTransform="active:rdfxml2jsonld">application/ld+json</produces>
									<produces withTransform="active:rdfxml2html+operator@res:/resources/xsl/rdfxml2htmlcbb.xsl">text/html</produces>
								</rest>
							</meta>

							<grammar>
								<active>
									<identifier>active:milieuinfocbbbyidremainderrestoverlay</identifier>
									<argument name="owner"/>
									<argument name="id"/>
									<argument name="remainder"/>
								</active>
							</grammar>

							<request>
								<identifier>active:milieuinfocbbbyidremainder</identifier>
								<argument name="owner" method="as-string">cbb/[[arg:owner]]</argument>
								<argument name="id" method="as-string">[[arg:id]]</argument>
								<argument name="remainder" method="as-string">[[arg:remainder]]</argument>								
							</request>
						</endpoint>
						
						<!-- /cbb/(adres|exploitatie|exploitant)/xxxxx.(rdf|ttl|nt|jsonld|html) -->
						<endpoint>
							<meta>
								<rest>
									<simple>{owner:(adres|exploitatie|exploitant)}/{id}.{extension:(rdf|ttl|nt|jsonld|html)}</simple>
									<method>GET</method>
									<Etag>MD5</Etag>
									<compress/>
								</rest>
							</meta>
							<grammar>
								<active>
									<identifier>active:milieuinfocbbbyidwithextensionrestoverlay</identifier>
									<argument name="owner"/>
									<argument name="id"/>
									<argument name="extension"/>
								</active>
							</grammar>
							<request>
								<identifier>active:milieuinfocbbbyidwithextension</identifier>
								<argument name="owner" method="as-string">cbb/[[arg:owner]]</argument>
								<argument name="id" method="as-string">[[arg:id]]</argument>
								<argument name="extension" method="as-string">[[arg:extension]]</argument>
							</request>
						</endpoint>

						<!-- /cbb/(adres|exploitatie|exploitant)/xxxxx -->
						<endpoint>
							<meta>
								<rest>
									<simple>{owner:(adres|exploitatie|exploitant)}/{id}</simple>
									<method>GET</method>
									<Etag>MD5</Etag>
									<compress/>
									<produces>text/xml</produces>
									<produces withTransform="active:rdfxml2rdfxml">application/rdf+xml</produces>
									<produces withTransform="active:rdfxml2turtle">text/turtle</produces>
									<produces withTransform="active:rdfxml2ntriple">text/plain</produces>
									<produces withTransform="active:rdfxml2jsonld">application/ld+json</produces>
									<produces withTransform="active:rdfxml2html+operator@res:/resources/xsl/rdfxml2htmlcbb.xsl">text/html</produces>
								</rest>
							</meta>
							<grammar>
								<active>
									<identifier>active:milieuinfocbbbyidrestoverlay</identifier>
									<argument name="owner"/>
									<argument name="id"/>
								</active>
							</grammar>
							<request>
								<identifier>active:milieuinfocbbbyid</identifier>
								<argument name="owner" method="as-string">cbb/[[arg:owner]]</argument>
								<argument name="id" method="as-string">[[arg:id]]</argument>
							</request>
						</endpoint>

						<!-- /cbb/fragments -->
						<endpoint>
							<meta>
								<rest>
									<simple>fragments</simple>
									<method>GET,POST</method>
									<Etag>MD5</Etag>
									<compress/>
									<produces>text/xml</produces>
									<produces withTransform="active:rdfxml2rdfxml">application/rdf+xml</produces>
									<produces withTransform="active:rdfxml2turtle">text/turtle</produces>
									<produces withTransform="active:rdfxml2ntriple">text/plain</produces>
									<produces withTransform="active:rdfxml2jsonld">application/ld+json</produces>
									<produces withTransform="active:rdfxml2html+operator@res:/resources/xsl/rdfxml2htmlcbb.xsl">text/html</produces>
								</rest>
							</meta>
							<grammar>
								<active>
									<identifier>active:milieuinfocbbfragmentsrestoverlay</identifier>
								</active>
							</grammar>
							<request>
								<identifier>active:milieuinfocbbfragments</identifier>
							</request>
						</endpoint>

						<!-- /cbb/keywordsearch -->
						<endpoint>
							<meta>
								<rest>
									<simple>keywordsearch</simple>
									<method>GET,POST</method>
									<Etag>MD5</Etag>
									<compress/>
								</rest>
							</meta>
							<grammar>
								<active>
									<identifier>active:milieuinfocbbkeywordsearchrestoverlay</identifier>
								</active>
							</grammar>
							<request>
								<identifier>active:milieuinfocbbkeywordsearch</identifier>
							</request>
						</endpoint>
						
						<!-- /cbb/sparql -->
						<endpoint>
							<meta>
								<rest>
									<simple>sparql</simple>
									<method>GET,POST</method>
									<Etag>MD5</Etag>
									<compress/>
								</rest>
							</meta>
							<grammar>
								<active>
									<identifier>active:milieuinfocbbsparqlrestoverlay</identifier>
								</active>
							</grammar>
							<request>
								<identifier>active:milieuinfocbbsparql</identifier>
							</request>
						</endpoint>
					</config>
					
					<space>
						<import>
							<!-- database constants -->
							<uri>urn:com:proxml:milieuinfo:database</uri>
							<private/>
						</import>
						
						<import>
							<!-- tools needed inside the RESTOverlay -->
							<uri>urn:com:proxml:milieuinfo:server:import:overlay</uri>
							<private/>
						</import>
					</space>
				</mapper>

				<import>
					<!-- database constants -->
					<uri>urn:com:proxml:milieuinfo:database</uri>
					<private/>
				</import>
						
				<import>
					<!-- needed here as well if the RESTOverlay itself
						 launches the request -->
					<uri>urn:com:proxml:milieuinfo:server:import:overlay</uri>
					<private/>
				</import>
			</space>
		</overlay>
		
		<overlay>
			<prototype>RESTOverlay</prototype>
			<config>
				<basepath>/</basepath>
				<auto404/>
			</config>
			
			<space>
				<mapper>
					<config>
						<!-- / -->
						<endpoint>
							<meta>
								<rest>
									<simple></simple>
									<method>GET</method>
									<Etag>MD5</Etag>
									<compress/>
									<produces>text/html</produces>
								</rest>
							</meta>
							
							<grammar>
								<active>
									<identifier>active:milieuinfohome</identifier>
								</active>
							</grammar>
							
							<request>
								<identifier>res:/resources/html/milieuinfo.html</identifier>
							</request>
						</endpoint>
						
						<!-- /css/* -->
						<endpoint>
							<meta>
								<rest>
									<simple>css/{cssfile}</simple>
									<method>GET</method>
									<Etag>MD5</Etag>
									<compress/>
									<produces>text/css</produces>
								</rest>
							</meta>
							
							<grammar>
								<active>
									<identifier>active:milieuinfocss</identifier>
									<argument name="cssfile"/>
								</active>
							</grammar>
							
							<request>
								<identifier>res:/resources/css/[[arg:cssfile]]</identifier>
							</request>
						</endpoint>
						
						<!-- /dataset/cbb.(rdf|ttl|nt|jsonld|html) -->
						<endpoint>
							<meta>
								<rest>
									<simple>dataset/cbb.{extension:(rdf|ttl|nt|jsonld|html)}</simple>
									<method>GET</method>
									<Etag>MD5</Etag>
									<compress/>
								</rest>
							</meta>

							<grammar>
								<active>
									<identifier>active:milieuinfocbbvoidwithextensionrestoverlay</identifier>
									<argument name="extension"/>
								</active>
							</grammar>
							
							<request>
								<identifier>active:milieuinfocbbvoidwithextension</identifier>
								<argument name="extension" method="as-string">[[arg:extension]]</argument>
							</request>							
						</endpoint>

						
						<!-- /dataset/cbb -->
						<endpoint>
							<meta>
								<rest>
									<simple>dataset/cbb</simple>
									<method>GET</method>
									<Etag>MD5</Etag>
									<compress/>
									<produces>text/xml</produces>
									<produces withTransform="active:rdfxml2rdfxml">application/rdf+xml</produces>
									<produces withTransform="active:rdfxml2turtle">text/turtle</produces>
									<produces withTransform="active:rdfxml2ntriple">text/plain</produces>
									<produces withTransform="active:rdfxml2jsonld">application/ld+json</produces>
									<produces withTransform="active:rdfxml2html+operator@res:/resources/xsl/rdfxml2htmlcbb.xsl">text/html</produces>
								</rest>
							</meta>
							
							<grammar>
								<active>
									<identifier>active:milieuinfocbbvoidrestoverlay</identifier>
								</active>
							</grammar>
							
							<request>
								<identifier>active:milieuinfocbbvoid</identifier>
							</request>
						</endpoint>

						<!-- /dataset/imjv.(rdf|ttl|nt|jsonld|html) -->
						<endpoint>
							<meta>
								<rest>
									<simple>dataset/imjv.{extension:(rdf|ttl|nt|jsonld|html)}</simple>
									<method>GET</method>
									<Etag>MD5</Etag>
									<compress/>
								</rest>
							</meta>

							<grammar>
								<active>
									<identifier>active:milieuinfoimjvvoidwithextensionrestoverlay</identifier>
									<argument name="extension"/>
								</active>
							</grammar>
							
							<request>
								<identifier>active:milieuinfoimjvvoidwithextension</identifier>
								<argument name="extension" method="as-string">[[arg:extension]]</argument>
							</request>							
						</endpoint>

						
						<!-- /dataset/imjv -->
						<endpoint>
							<meta>
								<rest>
									<simple>dataset/imjv</simple>
									<method>GET</method>
									<Etag>MD5</Etag>
									<compress/>
									<produces>text/xml</produces>
									<produces withTransform="active:rdfxml2rdfxml">application/rdf+xml</produces>
									<produces withTransform="active:rdfxml2turtle">text/turtle</produces>
									<produces withTransform="active:rdfxml2ntriple">text/plain</produces>
									<produces withTransform="active:rdfxml2jsonld">application/ld+json</produces>
									<produces withTransform="active:rdfxml2html+operator@res:/resources/xsl/rdfxml2htmlimjv.xsl">text/html</produces>
								</rest>
							</meta>
							
							<grammar>
								<active>
									<identifier>active:milieuinfoimjvvoidrestoverlay</identifier>
								</active>
							</grammar>
							
							<request>
								<identifier>active:milieuinfoimjvvoid</identifier>
							</request>
						</endpoint>
						
						<!-- /def.(rdf|ttl|nt|jsonld|html) -->
						<endpoint>
							<meta>
								<rest>
									<simple>def.{extension:(rdf|ttl|nt|jsonld|html)}</simple>
									<method>GET</method>
									<Etag>MD5</Etag>
									<compress/>
								</rest>
							</meta>

							<grammar>
								<active>
									<identifier>active:milieuinfodefwithextensionrestoverlay</identifier>
									<argument name="extension"/>
								</active>
							</grammar>
							
							<request>
								<identifier>active:milieuinfodefwithextension</identifier>
								<argument name="extension" method="as-string">[[arg:extension]]</argument>
							</request>							
						</endpoint>

					    <!-- /def -->
						<endpoint>
							<meta>
								<rest>
									<simple>def</simple>
									<method>GET</method>
									<Etag>MD5</Etag>
									<compress/>
									<produces>text/xml</produces>
									<produces withTransform="active:rdfxml2rdfxml">application/rdf+xml</produces>
									<produces withTransform="active:rdfxml2turtle">text/turtle</produces>
									<produces withTransform="active:rdfxml2ntriple">text/plain</produces>
									<produces withTransform="active:rdfxml2jsonld">application/ld+json</produces>
									<produces withTransform="active:rdfxml2html+operator@res:/resources/xsl/rdfxml2htmldef.xsl">text/html</produces>
								</rest>
							</meta>
							<grammar>
								<active>
									<identifier>active:milieuinfodefrestoverlay</identifier>
								</active>
							</grammar>
							<request>
								<identifier>active:milieuinfodef</identifier>
							</request>
						</endpoint>
					</config>
					<space>
						<import>
							<!-- database constants -->
							<uri>urn:com:proxml:milieuinfo:database</uri>
							<private/>
						</import>

						<import>
							<!-- tools needed inside the RESTOverlay -->
							<uri>urn:com:proxml:milieuinfo:server:import:overlay</uri>
							<private/>
						</import>
					</space>
				</mapper>
				
				<import>
					<!-- database constants -->
					<uri>urn:com:proxml:milieuinfo:database</uri>
					<private/>
				</import>
				
				<import>
					<!-- needed here as well if the RESTOverlay itself
						 launches the request -->
					<uri>urn:com:proxml:milieuinfo:server:import:overlay</uri>
					<private/>
				</import>
			</space>
		</overlay>
		
		
		<import>
			<uri>urn:com:proxml:milieuinfo:server:import</uri>
			<private/>
		</import>
	</rootspace>
	
	<rootspace
		name="proxml milieuinfo server import"
		public="false"
		uri="urn:com:proxml:milieuinfo:server:import">
		
		<import>
			<!-- contains RESTOverlay prototype -->
			<uri>urn:org:netkernel:tpt:http</uri>
		</import>
		
		<import>
			<!-- contains Limiter prototype -->
			<uri>urn:org:netkernel:ext:layer1</uri>
		</import>
	</rootspace>
	
	<rootspace
		name="proxml milieuinfo server import overlay"
		public="false"
		uri="urn:com:proxml:milieuinfo:server:import:overlay">
		<fileset>
			<!-- contains html resources -->
			<regex>res:/resources/html/.*</regex>
		</fileset>
		
		<fileset>
			<!-- contains css resources -->
			<regex>res:/resources/css/.*</regex>
		</fileset>
		
		<fileset>
			<!-- contains groovy scripts -->
			<regex>res:/resources/groovy/.*</regex>
		</fileset>

		<fileset>
			<!-- contains freemarker resources -->
			<regex>res:/resources/freemarker/.*</regex>
		</fileset>

		<fileset>
			<!-- contains xsl resources -->
			<regex>res:/resources/xsl/.*</regex>
		</fileset>

		<fileset>
			<!-- contains sparql resources -->
			<regex>res:/resources/sparql/.*</regex>
		</fileset>

		<import>
			<!-- contains GroovyPrototype -->
			<uri>urn:org:netkernel:lang:groovy</uri>
		</import>

		<import>
			<!-- contains active:freemarker -->
			<uri>urn:org:netkernel:lang:freemarker</uri>
		</import>

		<import>
			<!-- contains active:xsltc -->
			<uri>urn:org:netkernel:xml:core</uri>
		</import>
		
		<import>
			<!-- contains active:tagSoup -->
			<uri>urn:org:netkernel:web:core</uri>
		</import>
		
		<import>
			<!-- contains pds:/ scheme -->
			<uri>urn:org:netkernel:mod:pds</uri>
		</import>
		
		<import>
			<!-- contains transreptors used when the commands are 
				 launched manually (e.g. request trace tool) -->
			<uri>urn:org:netkernel:ext:layer1</uri>
		</import>

		<import>
			<!-- contains                                    -->
			<!-- active:rdfxml2rdfxml, active:rdfxml2turtle  -->
			<!-- active:rdfxml2ntriple, active:rdfxml2jsonld -->
			<uri>urn:com:ebc:triplestore:utility</uri>
			<version-min>1.0.0</version-min>
		</import>

		<import>
			<!-- contains active:sparql -->
			<uri>urn:com:ebc:triplestore:httpclient:sparql</uri>
			<version-min>1.0.0</version-min>
		</import>

		<import>
			<!-- contains active:fragments -->
			<uri>urn:com:ebc:triplestore:httpclient:fragments</uri>
			<version-min>1.0.0</version-min>
		</import>

		<import>
			<!-- contains active:keywordsearch -->
			<uri>urn:com:ebc:triplestore:httpclient:kws:bigdata</uri>
			<version-min>1.0.0</version-min>
		</import>
		
		<import>
			<!-- contains active:pds -->
			<uri>urn:com:ebc:tool:pdsfile</uri>
			<version-min>1.0.0</version-min>
		</import>

		<accessor>
			<id>com:proxml:milieuinfo:server:def:groovy:accessor</id>
			<prototype>GroovyPrototype</prototype>
			<script>res:/resources/groovy/milieuinfodef.groovy</script>
			<grammar>
				<active>
					<identifier>active:milieuinfodef</identifier>
				</active>
			</grammar>
		</accessor>

		<accessor>
			<id>com:proxml:milieuinfo:server:cbbvoid:groovy:accessor</id>
			<prototype>GroovyPrototype</prototype>
			<script>res:/resources/groovy/milieuinfocbbvoid.groovy</script>
			<grammar>
				<active>
					<identifier>active:milieuinfocbbvoid</identifier>
				</active>
			</grammar>
		</accessor>

		<accessor>
			<id>com:proxml:milieuinfo:server:imjvvoid:groovy:accessor</id>
			<prototype>GroovyPrototype</prototype>
			<script>res:/resources/groovy/milieuinfoimjvvoid.groovy</script>
			<grammar>
				<active>
					<identifier>active:milieuinfoimjvvoid</identifier>
				</active>
			</grammar>
		</accessor>
		
		<accessor>
			<id>com:proxml:milieuinfo:server:cbbbyid:groovy:accessor</id>
			<prototype>GroovyPrototype</prototype>
			<script>res:/resources/groovy/milieuinfocbbbyid.groovy</script>
			<grammar>
				<active>
					<identifier>active:milieuinfocbbbyid</identifier>
					<argument name="owner" desc="owner" max="1" min="1"/>
					<argument name="id" desc="id" max="1" min="1"/>
				</active>
			</grammar>
		</accessor>
		
		<accessor>
			<id>com:proxml:milieuinfo:server:imjvbyid:groovy:accessor</id>
			<prototype>GroovyPrototype</prototype>
			<script>res:/resources/groovy/milieuinfoimjvbyid.groovy</script>
			<grammar>
				<active>
					<identifier>active:milieuinfoimjvbyid</identifier>
					<argument name="owner" desc="owner" max="1" min="1"/>
					<argument name="id" desc="id" max="1" min="1"/>
				</active>
			</grammar>
		</accessor>

		<accessor>
			<id>com:proxml:milieuinfo:server:cbbbyidremainder:groovy:accessor</id>
			<prototype>GroovyPrototype</prototype>
			<script>res:/resources/groovy/milieuinfocbbbyidremainder.groovy</script>
			<grammar>
				<active>
					<identifier>active:milieuinfocbbbyidremainder</identifier>
					<argument name="owner" desc="owner" max="1" min="1"/>
					<argument name="id" desc="id" max="1" min="1"/>
					<argument name="remainder" desc="remainder" max="1" min="1"/>
				</active>
			</grammar>
		</accessor>

		<accessor>
			<id>com:proxml:milieuinfo:server:imjvbyidremainder:groovy:accessor</id>
			<prototype>GroovyPrototype</prototype>
			<script>res:/resources/groovy/milieuinfoimjvbyidremainder.groovy</script>
			<grammar>
				<active>
					<identifier>active:milieuinfoimjvbyidremainder</identifier>
					<argument name="owner" desc="owner" max="1" min="1"/>
					<argument name="id" desc="id" max="1" min="1"/>
					<argument name="remainder" desc="remainder" max="1" min="1"/>
				</active>
			</grammar>
		</accessor>

		<accessor>
			<id>com:proxml:milieuinfo:server:defwithextension:groovy:accessor</id>
			<prototype>GroovyPrototype</prototype>
			<script>res:/resources/groovy/milieuinfodefwithextension.groovy</script>
			<grammar>
				<active>
					<identifier>active:milieuinfodefwithextension</identifier>
					<argument name="extension" desc="extension" max="1" min="1"/>
				</active>
			</grammar>
		</accessor>

		<accessor>
			<id>com:proxml:milieuinfo:server:cbbvoidwithextension:groovy:accessor</id>
			<prototype>GroovyPrototype</prototype>
			<script>res:/resources/groovy/milieuinfocbbvoidwithextension.groovy</script>
			<grammar>
				<active>
					<identifier>active:milieuinfocbbvoidwithextension</identifier>
					<argument name="extension" desc="extension" max="1" min="1"/>
				</active>
			</grammar>
		</accessor>

		<accessor>
			<id>com:proxml:milieuinfo:server:imjvvoidwithextension:groovy:accessor</id>
			<prototype>GroovyPrototype</prototype>
			<script>res:/resources/groovy/milieuinfoimjvvoidwithextension.groovy</script>
			<grammar>
				<active>
					<identifier>active:milieuinfoimjvvoidwithextension</identifier>
					<argument name="extension" desc="extension" max="1" min="1"/>
				</active>
			</grammar>
		</accessor>

		<accessor>
			<id>com:proxml:milieuinfo:server:cbbbyidwithextension:groovy:accessor</id>
			<prototype>GroovyPrototype</prototype>
			<script>res:/resources/groovy/milieuinfocbbbyidwithextension.groovy</script>
			<grammar>
				<active>
					<identifier>active:milieuinfocbbbyidwithextension</identifier>
					<argument name="owner" desc="owner" max="1" min="1"/>
					<argument name="id" desc="id" max="1" min="1"/>
					<argument name="extension" desc="extension" max="1" min="1"/>
				</active>
			</grammar>
		</accessor>

		<accessor>
			<id>com:proxml:milieuinfo:server:imjvbyidwithextension:groovy:accessor</id>
			<prototype>GroovyPrototype</prototype>
			<script>res:/resources/groovy/milieuinfoimjvbyidwithextension.groovy</script>
			<grammar>
				<active>
					<identifier>active:milieuinfoimjvbyidwithextension</identifier>
					<argument name="owner" desc="owner" max="1" min="1"/>
					<argument name="id" desc="id" max="1" min="1"/>
					<argument name="extension" desc="extension" max="1" min="1"/>
				</active>
			</grammar>
		</accessor>
		
		<accessor>
			<id>com:proxml:milieuinfo:server:cbbbyidremainderwithextension:groovy:accessor</id>
			<prototype>GroovyPrototype</prototype>
			<script>res:/resources/groovy/milieuinfocbbbyidremainderwithextension.groovy</script>
			<grammar>
				<active>
					<identifier>active:milieuinfocbbbyidremainderwithextension</identifier>
					<argument name="owner" desc="owner" max="1" min="1"/>
					<argument name="id" desc="id" max="1" min="1"/>
					<argument name="remainder" desc="remainder" max="1" min="1"/>
					<argument name="extension" desc="extension" max="1" min="1"/>
				</active>
			</grammar>
		</accessor>

		<accessor>
			<id>com:proxml:milieuinfo:server:imjvbyidremainderwithextension:groovy:accessor</id>
			<prototype>GroovyPrototype</prototype>
			<script>res:/resources/groovy/milieuinfoimjvbyidremainderwithextension.groovy</script>
			<grammar>
				<active>
					<identifier>active:milieuinfoimjvbyidremainderwithextension</identifier>
					<argument name="owner" desc="owner" max="1" min="1"/>
					<argument name="id" desc="id" max="1" min="1"/>
					<argument name="remainder" desc="remainder" max="1" min="1"/>
					<argument name="extension" desc="extension" max="1" min="1"/>
				</active>
			</grammar>
		</accessor>
		
		<accessor>
			<id>com:proxml:milieuinfo:server:cbbsparql:groovy:accessor</id>
			<prototype>GroovyPrototype</prototype>
			<script>res:/resources/groovy/milieuinfocbbsparql.groovy</script>
			<grammar>
				<active>
					<identifier>active:milieuinfocbbsparql</identifier>
					<argument name="query" desc="query" max="1" min="0"/>
					<argument name="accept" desc="accept header" max="1" min="0"/>
				</active>
			</grammar>
		</accessor>

		<accessor>
			<id>com:proxml:milieuinfo:server:cbbfragments:groovy:accessor</id>
			<prototype>GroovyPrototype</prototype>
			<script>res:/resources/groovy/milieuinfocbbfragments.groovy</script>
			<grammar>
				<active>
					<identifier>active:milieuinfocbbfragments</identifier>
					<argument name="subject" desc="subject" max="1" min="0"/>
					<argument name="predicate" desc="predicate" max="1" min="0"/>
					<argument name="object" desc="object" max="1" min="0"/>
					<argument name="limit" desc="limit" max="1" min="0"/>
					<argument name="offset" desc="offset" max="1" min="0"/>
					<argument name="accept" desc="accept header" max="1" min="0"/>
				</active>
			</grammar>
		</accessor>

		<accessor>
			<id>com:proxml:milieuinfo:server:cbbkeywordsearch:groovy:accessor</id>
			<prototype>GroovyPrototype</prototype>
			<script>res:/resources/groovy/milieuinfocbbkeywordsearch.groovy</script>
			<grammar>
				<active>
					<identifier>active:milieuinfocbbkeywordsearch</identifier>
					<argument name="search" desc="search" max="1" min="0"/>
					<argument name="limit" desc="limit" max="1" min="0"/>
					<argument name="accept" desc="accept header" max="1" min="0"/>
				</active>
			</grammar>
		</accessor>


		<accessor>
			<id>com:proxml:milieuinfo:server:rdfxml2html:groovy:accessor</id>
			<prototype>GroovyPrototype</prototype>
			<script>res:/resources/groovy/rdfxml2html.groovy</script>
			<grammar>
				<active>
					<identifier>active:rdfxml2html</identifier>
					<argument name="operand" desc="unfiltered rdfxml" max="1" min="1"/>
					<argument name="operator" desc="xsl stylesheet" max="1" min="1"/>
				</active>
			</grammar>			
		</accessor>
	</rootspace>
</module>