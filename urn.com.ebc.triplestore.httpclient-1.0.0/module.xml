<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module>
<module version="2.0">
	<meta>
		<identity>
			<uri>urn:com:ebc:triplestore:httpclient</uri>
			<version>1.0.0</version>
		</identity>
		<info>
			<name>ebc / triplestore / httpclient</name>
			<description>elephant bird consulting / triplestore / httpclient</description>
		</info>
	</meta>
		
	<system>
		<dynamic/>
	</system>
			
	<rootspace
		name="ebc triplestore httpclient fragments"
		public="true"
		uri="urn:com:ebc:triplestore:httpclient:fragments">

		<fileset>
			<regex>res:/etc/system/(LogConfig).xml</regex>
		</fileset>

		<accessor>
			<id>com:ebc:triplestore:httpclient:java:fragments:accessor</id>
			<class>com.ebc.triplestore.httpclient.FragmentsAccessor</class>
			<grammar>
				<active>
					<identifier>active:fragments</identifier>
					<argument name="database" desc="database name or url" max="1" min="1"/>
					<argument name="accept" desc="expected mimetype of response" max="1" min="1"/>
					<argument name="expiry" desc="expiry of the response in milliseconds" max="1" min="1"/>
					<argument name="credentials" desc="http credentials" max="1" min="1"/>
					<argument name="subject" desc="subject" max="1" min="0"/>
					<argument name="predicate" desc="predicate" max="1" min="0"/>
					<argument name="object" desc="object" max="1" min="0"/>
					<argument name="limit" desc="limit on the results of the query" max="1" min="0"/>
					<argument name="offset" desc="starting point in the query resultset" max="1" min="0"/>
					<argument name="dataset" desc="dataset that we are querying" max="1" min="0"/>
					<argument name="url" desc="requested url" max="1" min="0"/>
					<argument name="query" desc="query" max="1" min="0"/>
				</active>
			</grammar>
		</accessor>

		<import>
			<uri>urn:com:ebc:triplestore:httpclient:import</uri>
			<private/>
		</import>
	</rootspace>

	<rootspace
		name="ebc triplestore httpclient reconcile jena"
		public="true"
		uri="urn:com:ebc:triplestore:httpclient:reconcile:jena">

		<fileset>
			<regex>res:/etc/system/(LogConfig).xml</regex>
		</fileset>
		
		<accessor>
			<id>com:ebc:triplestore:httpclient:java:reconcilejena:accessor</id>
			<class>com.ebc.triplestore.httpclient.ReconcileJenaAccessor</class>
			<grammar>
				<active>
					<identifier>active:reconcile</identifier>
					<argument name="database" desc="database name or url" max="1" min="1"/>
					<argument name="accept" desc="expected mimetype of response" max="1" min="1"/>
					<argument name="expiry" desc="expiry of the response in milliseconds" max="1" min="1"/>
					<argument name="credentials" desc="http credentials" max="1" min="1"/>
					<argument name="search" desc="keywords" max="1" min="1"/>
					<argument name="baseurl" desc="baseurl" max="1" min="1"/>
					<argument name="limit" desc="limit on the results of the search" max="1" min="0"/>
					<argument name="type" desc="type that we want filtered" max="1" min="0"/>
				</active>
			</grammar>
		</accessor>
		
		<import>
			<uri>urn:com:ebc:triplestore:httpclient:import</uri>
			<private/>
		</import>
	</rootspace>

	<rootspace
		name="ebc triplestore httpclient kws jena"
		public="true"
		uri="urn:com:ebc:triplestore:httpclient:kws:jena">

		<fileset>
			<regex>res:/etc/system/(LogConfig).xml</regex>
		</fileset>
		
		<accessor>
			<id>com:ebc:triplestore:httpclient:java:keywordsearchjena:accessor</id>
			<class>com.ebc.triplestore.httpclient.KeywordSearchJenaAccessor</class>
			<grammar>
				<active>
					<identifier>active:keywordsearch</identifier>
					<argument name="database" desc="database name or url" max="1" min="1"/>
					<argument name="accept" desc="expected mimetype of response" max="1" min="1"/>
					<argument name="expiry" desc="expiry of the response in milliseconds" max="1" min="1"/>
					<argument name="credentials" desc="http credentials" max="1" min="1"/>
					<argument name="search" desc="keywords" max="1" min="1"/>
					<argument name="limit" desc="limit on the results of the search" max="1" min="0"/>
				</active>
			</grammar>
		</accessor>

		<import>
			<uri>urn:com:ebc:triplestore:httpclient:import</uri>
			<private/>
		</import>
	</rootspace>

	<rootspace
		name="ebc triplestore httpclient kws bigdata"
		public="true"
		uri="urn:com:ebc:triplestore:httpclient:kws:bigdata">

		<fileset>
			<regex>res:/etc/system/(LogConfig).xml</regex>
		</fileset>
		
		<accessor>
			<id>com:ebc:triplestore:httpclient:java:keywordsearchbigdata:accessor</id>
			<class>com.ebc.triplestore.httpclient.KeywordSearchBigDataAccessor</class>
			<grammar>
				<active>
					<identifier>active:keywordsearch</identifier>
					<argument name="database" desc="database name or url" max="1" min="1"/>
					<argument name="accept" desc="expected mimetype of response" max="1" min="1"/>
					<argument name="expiry" desc="expiry of the response in milliseconds" max="1" min="1"/>
					<argument name="credentials" desc="http credentials" max="1" min="1"/>
					<argument name="search" desc="keywords" max="1" min="1"/>
					<argument name="limit" desc="limit on the results of the search" max="1" min="0"/>
				</active>
			</grammar>
		</accessor>

		<import>
			<uri>urn:com:ebc:triplestore:httpclient:import</uri>
			<private/>
		</import>
	</rootspace>

	<rootspace
		name="ebc triplestore httpclient kws bif"
		public="true"
		uri="urn:com:ebc:triplestore:httpclient:kws:bif">

		<fileset>
			<regex>res:/etc/system/(LogConfig).xml</regex>
		</fileset>
		
		<accessor>
			<id>com:ebc:triplestore:httpclient:java:keywordsearchbif:accessor</id>
			<class>com.ebc.triplestore.httpclient.KeywordSearchBifAccessor</class>
			<grammar>
				<active>
					<identifier>active:keywordsearch</identifier>
					<argument name="database" desc="database name or url" max="1" min="1"/>
					<argument name="accept" desc="expected mimetype of response" max="1" min="1"/>
					<argument name="expiry" desc="expiry of the response in milliseconds" max="1" min="1"/>
					<argument name="credentials" desc="http credentials" max="1" min="1"/>
					<argument name="search" desc="keywords" max="1" min="1"/>
					<argument name="limit" desc="limit on the results of the search" max="1" min="0"/>
				</active>
			</grammar>
		</accessor>

		<import>
			<uri>urn:com:ebc:triplestore:httpclient:import</uri>
			<private/>
		</import>
	</rootspace>

	<rootspace
		name="ebc triplestore httpclient sparql"
		public="true"
		uri="urn:com:ebc:triplestore:httpclient:sparql">

		<fileset>
			<regex>res:/etc/system/(LogConfig).xml</regex>
		</fileset>
		
		<accessor>
			<id>com:ebc:triplestore:httpclient:java:sparql:accessor</id>
			<class>com.ebc.triplestore.httpclient.SPARQLAccessor</class>
			<grammar>
				<active>
					<identifier>active:sparql</identifier>
					<argument name="database" desc="database name or url" max="1" min="1"/>
					<argument name="query" desc="query" max="1" min="1"/>
					<argument name="accept" desc="expected mimetype of response" max="1" min="1"/>
					<argument name="expiry" desc="expiry of the response in milliseconds" max="1" min="1"/>
					<argument name="credentials" desc="http credentials" max="1" min="1"/>
				</active>
			</grammar>
		</accessor>
		
		<import>
			<uri>urn:com:ebc:triplestore:httpclient:import</uri>
			<private/>
		</import>
	</rootspace>
	
	<rootspace
		name="ebc triplestore httpclient import"
		public="false"
		uri="urn:com:ebc:triplestore:httpclient:import">
		
		<literal type="hds" uri="res:/resources/cfg/http.cfg">
			<config>
				<expectContinue>false</expectContinue>
				<followRedirects>false</followRedirects>
				<timeout>1800000</timeout> <!-- milliseconds, equals 30 minutes -->
			</config>
		</literal>
		
		<fileset>
			<!-- freemarker resources -->
			<regex>res:/resources/freemarker/.*</regex>
		</fileset>

		<fileset>
			<!-- xsl resources -->
			<regex>res:/resources/xsl/.*</regex>
		</fileset>
		
		<import>
			<!-- contains                               -->
			<!-- http:// scheme                         -->
			<!-- active:httpState, active:httpAsyncPost -->
			<uri>urn:org:netkernel:client:http</uri>
		</import>
		
		<import>
			<!-- contains active:freemarker -->
			<uri>urn:org:netkernel:lang:freemarker</uri>
		</import>
		
		<import>
			<!-- contains active:xsltc -->
			<uri>urn:org:netkernel:xml:core</uri>
		</import>
	</rootspace>
</module>